/*
Deployment script for HWProjectDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HWProjectDB"
:setvar DefaultFilePrefix "HWProjectDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Addresses]...';


GO
CREATE TABLE [dbo].[Addresses] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Casts]...';


GO
CREATE TABLE [dbo].[Casts] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (200) NULL,
    [Gender]      NVARCHAR (30)  NULL,
    [Dummy]       NVARCHAR (200) NOT NULL,
    [ProfilePath] NVARCHAR (200) NULL,
    [CreatedDate] DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NULL,
    [UpdatedDate] DATETIME       NULL,
    [UpdatedBy]   NVARCHAR (258) NULL,
    [Order]       INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[GenreMovies]...';


GO
CREATE TABLE [dbo].[GenreMovies] (
    [GenreId] INT NOT NULL,
    [MovieId] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[Genres]...';


GO
CREATE TABLE [dbo].[Genres] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (MAX) NULL,
    [CreatedDate] DATETIME       NULL,
    [CreatedBy]   NVARCHAR (25)  NULL,
    [UpdatedDate] DATETIME       NULL,
    [UpdatedBy]   NVARCHAR (258) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[KeywordMovies]...';


GO
CREATE TABLE [dbo].[KeywordMovies] (
    [Keyword_Id] INT NOT NULL,
    [Movie_Id]   INT NOT NULL
);


GO
PRINT N'Creating [dbo].[Keywords]...';


GO
CREATE TABLE [dbo].[Keywords] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (200) NULL,
    [CreatedDate] DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NULL,
    [UpdatedDate] DATETIME       NULL,
    [UpdatedBy]   NVARCHAR (258) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[MovieCasts]...';


GO
CREATE TABLE [dbo].[MovieCasts] (
    [Movie_Id]  INT           NOT NULL,
    [Cast_Id]   INT           NOT NULL,
    [Character] NVARCHAR (80) NOT NULL,
    PRIMARY KEY CLUSTERED ([Character] ASC)
);


GO
PRINT N'Creating [dbo].[Movies]...';


GO
CREATE TABLE [dbo].[Movies] (
    [Id]               INT            NOT NULL,
    [OriginalTitle]    NVARCHAR (MAX) NULL,
    [Titles]           NVARCHAR (50)  NULL,
    [Overview]         NVARCHAR (MAX) NULL,
    [Tagline]          NVARCHAR (MAX) NULL,
    [Budget]           DECIMAL (18)   NOT NULL,
    [Revenue]          DECIMAL (18)   NOT NULL,
    [ImdbId]           NVARCHAR (MAX) NULL,
    [TmdbId]           NVARCHAR (MAX) NULL,
    [PosterUrl]        NVARCHAR (MAX) NULL,
    [OriginalLanguage] NVARCHAR (30)  NULL,
    [Popularity]       DECIMAL (18)   NOT NULL,
    [ReleaseDate]      DATETIME       NULL,
    [RunTime]          INT            NOT NULL,
    [IsReleased]       BIT            NULL,
    [AverageVote]      DECIMAL (18)   NULL,
    [VoteCount]        INT            NULL,
    [ExternalId]       INT            NOT NULL,
    [CreatedDate]      DATETIME       NULL,
    [CreatedBy]        NVARCHAR (100) NULL,
    [UpdatedDate]      DATETIME       NULL,
    [UpdatedBy]        NVARCHAR (258) NULL,
    [BackdropUrl]      NVARCHAR (258) NULL,
    [HomePage]         NVARCHAR (258) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Purchases]...';


GO
CREATE TABLE [dbo].[Purchases] (
    [Id]               INT              NOT NULL,
    [PurchaseNumber]   UNIQUEIDENTIFIER NOT NULL,
    [CustomerId]       NVARCHAR (128)   NULL,
    [TotalPrice]       DECIMAL (18)     NOT NULL,
    [PurchaseDateTime] DATETIME         NOT NULL,
    [MovieId]          INT              NOT NULL,
    [CreatedDate]      DATETIME         NULL,
    [CreatedBy]        NVARCHAR (100)   NULL,
    [UpdatedDate]      DATETIME         NULL,
    [UpdatedBy]        NVARCHAR (258)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Rentals]...';


GO
CREATE TABLE [dbo].[Rentals] (
    [Id]             INT              NOT NULL,
    [CustomerId]     NVARCHAR (128)   NULL,
    [RentalDateTime] DATETIME         NOT NULL,
    [RentalDuration] INT              NOT NULL,
    [MovieId]        INT              NOT NULL,
    [CreatedDate]    DATETIME         NULL,
    [CreatedBy]      NVARCHAR (100)   NULL,
    [UpdatedDate]    DATETIME         NULL,
    [UpdatedBy]      NVARCHAR (258)   NULL,
    [RentalNumber]   UNIQUEIDENTIFIER NOT NULL,
    [TotalPrice]     DECIMAL (18)     NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]                      NVARCHAR (128) NOT NULL,
    [FirstName]               NVARCHAR (100) NOT NULL,
    [LastName]                NVARCHAR (100) NOT NULL,
    [DateOfBirth]             DATETIME       NOT NULL,
    [CreatedDate]             DATETIME       NULL,
    [CreatedBy]               NVARCHAR (100) NULL,
    [UpdatedDate]             DATETIME       NULL,
    [UpdatedBy]               NVARCHAR (258) NULL,
    [Email]                   NVARCHAR (256) NULL,
    [EmailConfirmation]       BIT            NOT NULL,
    [PasswordHash]            NVARCHAR (MAX) NULL,
    [SecurityStamp]           NVARCHAR (MAX) NULL,
    [PhoneNumber]             NVARCHAR (MAX) NULL,
    [PhoneNumberConfirmation] BIT            NOT NULL,
    [TwoFactorEncription]     BIT            NOT NULL,
    [LockoutEndDate]          DATETIME       NULL,
    [LockoutEnabled]          BIT            NOT NULL,
    [AccessFailed]            INT            NOT NULL,
    [UserName]                NVARCHAR (256) NOT NULL,
    [BillingAddress_Id]       INT            NULL,
    [ShippingAddress_Id]      INT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_GenreMovies_Genres]...';


GO
ALTER TABLE [dbo].[GenreMovies]
    ADD CONSTRAINT [FK_GenreMovies_Genres] FOREIGN KEY ([GenreId]) REFERENCES [dbo].[Genres] ([Id]);


GO
PRINT N'Creating [dbo].[FK_GenreMovies_Movies]...';


GO
ALTER TABLE [dbo].[GenreMovies]
    ADD CONSTRAINT [FK_GenreMovies_Movies] FOREIGN KEY ([MovieId]) REFERENCES [dbo].[Movies] ([Id]);


GO
PRINT N'Creating [dbo].[FK_KeywordMovies_Movies]...';


GO
ALTER TABLE [dbo].[KeywordMovies]
    ADD CONSTRAINT [FK_KeywordMovies_Movies] FOREIGN KEY ([Movie_Id]) REFERENCES [dbo].[Movies] ([Id]);


GO
PRINT N'Creating [dbo].[FK_KeywordMovies_Keywords]...';


GO
ALTER TABLE [dbo].[KeywordMovies]
    ADD CONSTRAINT [FK_KeywordMovies_Keywords] FOREIGN KEY ([Keyword_Id]) REFERENCES [dbo].[Keywords] ([Id]);


GO
PRINT N'Creating [dbo].[FK_MovieCasts_Movies]...';


GO
ALTER TABLE [dbo].[MovieCasts]
    ADD CONSTRAINT [FK_MovieCasts_Movies] FOREIGN KEY ([Movie_Id]) REFERENCES [dbo].[Movies] ([Id]);


GO
PRINT N'Creating [dbo].[FK_MovieCasts_Casts]...';


GO
ALTER TABLE [dbo].[MovieCasts]
    ADD CONSTRAINT [FK_MovieCasts_Casts] FOREIGN KEY ([Cast_Id]) REFERENCES [dbo].[Casts] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Purchases_Movies]...';


GO
ALTER TABLE [dbo].[Purchases]
    ADD CONSTRAINT [FK_Purchases_Movies] FOREIGN KEY ([MovieId]) REFERENCES [dbo].[Movies] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Purchases_Users]...';


GO
ALTER TABLE [dbo].[Purchases]
    ADD CONSTRAINT [FK_Purchases_Users] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Users] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Rentals_Movies]...';


GO
ALTER TABLE [dbo].[Rentals]
    ADD CONSTRAINT [FK_Rentals_Movies] FOREIGN KEY ([MovieId]) REFERENCES [dbo].[Movies] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Rentals_Users]...';


GO
ALTER TABLE [dbo].[Rentals]
    ADD CONSTRAINT [FK_Rentals_Users] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Users] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Users_Addresses]...';


GO
ALTER TABLE [dbo].[Users]
    ADD CONSTRAINT [FK_Users_Addresses] FOREIGN KEY ([BillingAddress_Id]) REFERENCES [dbo].[Addresses] ([Id]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
